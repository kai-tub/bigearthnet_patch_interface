name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8, 3.9]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Check if all notebooks are cleaned
        # Local tests will usually have uncommited changes
        if: ${{ !env.ACT }}
        run: |
          source .venv/bin/activate
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          python -m nbstripout tests/*.ipynb
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped test notebooks\n!!!Remember to run `nbstripout --install`!"; false; fi
      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m pytest "tests"
  release:
    name: Release new version on GitHub
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Set up Git
        uses: actions/checkout@v2
      - name: Prepare repository
        run: git fetch --unshallow --tags
      - name: Run release script
        run: bash .auto/run_auto.sh
        env:
          # To be able to trigger publish event
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
